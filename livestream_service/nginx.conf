# This config has been tested locally to work :)

user www-data;
worker_processes  auto; # auto decides how many threads to use

error_log /nginx/error.log warn;

events {
    worker_connections  1024; # number of threads to run simultaneously 
}

# RTMP configuration
rtmp {
    server {
        listen 1935; # Listen on standard RTMP port
        chunk_size 4000;
	# application context ==> akin to different RTMP endpoints
        application show {
            live on;
            interleave on;

	  # =========  HLS configurations ===================
	  hls on; # to enable hls playback on all devices
	  hls_path /nginx/hls/; # path for fragments
	  hls_fragment 3; # duration for fragments
	  hls_playlist_length 60; # # of fragments in playlist
	  # disable consuming the stream from nginx as rtmp, only via hls
	  deny play all;

	  #==========  DASH configurations ==================
	  dash on;
	  dash_path /nginx/dash/;
	  dash_fragment 15s;

	# extra: this can help to give redundancy where can pull and stream another stream
	# note the nametag is impt for generating metadata
	# pull rtmp://<url>:<port>/<path>   <nametag>...   # <=== format
	# pull rtmp://tv2.example.com:443/root/new name=tv2 static;   # <=== example

         }
   }
}

http {
    sendfile off;
    tcp_nopush on;
    # aio on; # commented out if aio (async io) is unsupported on platform
    directio 512;
    default_type application/octet-stream;

    server {
        listen 8080;

        location / {
            # Disable cache
            add_header 'Cache-Control' 'no-cache';

            # CORS setup
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length';

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            types {
                application/dash+xml mpd;
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }

            root /nginx;
        }
    }
}


