# boilerplate starters:
user www-data
worker_processes auto;
pid /run/nginx.pid;


events {
    worker_connections 768;
    # multi_accept on;
}
######

#################
#   CONTEXTS    #
#################

# RTMP context
rtmp {
    # server context for the rmtp server
    server {
        listen 1935; # default rtmp tcp port
        # application context ==> akin to different RTMP endpoints
        application live { # application named as "live"
            live on; # refers to live stream
            interleave on; # optimisation for combining video and audio chunks in same rtmp packet
            # =========  HLS configurations ===================
            hls on; # to enable hls playback on all devices
            hls_path /tmp/hls; # path for fragments
            hls_fragment 15s; # duration for fragments


            #==========  DASH configurations ==================
            dash on;
            dash_path /tmp/dash;
            dash_fragment 15s;
            # this can help to give redundancy where can pull and stream another stream
            # note the nametag is impt for generating metadata
            # pull rtmp://<url>:<port>/<path>   <nametag>...   # <=== format
            # pull rtmp://tv2.example.com:443/root/new name=tv2 static;   # <=== example
        }
    }
}


# HTTP context configuration
http {
    default_type application/octet-stream;
    server {
        listen 80;
        location /tv {
            root /tmp; # this is where we'll be putting the dash and hls chunks
        }
    }
    types {
        # ===== MIME TYPES ===========
        application/vnd.apple.mpegurl m3u8; # hls metadata
        video/mp2t ts; # hls fragment
        text/html html; # webpages
        application/dash+xml mpd; # dash metadata
    }
}